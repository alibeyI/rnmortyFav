{"version":3,"sources":["Store.tsx","App.tsx","Actions.ts","HomePage.tsx","FavPage.tsx","index.tsx"],"names":["initialState","episodes","favourites","Store","React","createContext","reducer","state","action","type","payload","StoreProvider","children","useReducer","dispatch","Provider","value","App","props","useContext","Fragment","className","to","length","fetchingDataAction","a","fetch","data","json","dataJson","_embedded","toggleFavAction","episode","episodeInFav","includes","dispatchObj","filter","fav","id","EpisodeList","lazy","HomePage","useEffect","epis","store","Suspense","fallback","style","display","flexWrap","minWidth","FavPage","RouterPage","pageComponent","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.34569d79.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {IState,IAction} from './interfaces'\r\n\r\n\r\n\r\nconst initialState: IState = {\r\n  episodes: [],\r\n  favourites: [],\r\n};\r\n\r\nexport const Store = React.createContext<IState | any>(initialState);\r\n\r\nconst reducer = (state: IState, action: IAction): IState => {\r\n  switch (action.type) {\r\n    case \"FETCH_DATA\":\r\n      return { ...state, episodes: action.payload };\r\n    case 'ADD_FAV':\r\n      return {...state, favourites:[...state.favourites,action.payload]}\r\n    case 'REMOVE_FAV':\r\n      return{\r\n        ...state,\r\n        favourites:action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const StoreProvider = ({children}: JSX.ElementChildrenAttribute): JSX.Element => {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n  return (\r\n    <Store.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </Store.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Store } from \"./Store\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nconst App = (props: any): JSX.Element => {\r\n  const { state } = React.useContext(Store);\r\n  // Object.keys(state)\r\n  return (\r\n    <React.Fragment>\r\n      <header className=\"header\">\r\n        <div>\r\n          <h1>Rick and Morty</h1>\r\n          <p>Pick your favourite episode!</p>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/faves\">Favourites: {state.favourites.length}</Link>\r\n        </div>\r\n      </header>\r\n      {props.children}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { IState, IEpisode, IAction } from \"./interfaces\";\r\n\r\nexport  const fetchingDataAction = async (dispatch:any) => {\r\n    const URL =\r\n      \"https://api.tvmaze.com/singlesearch/shows?q=rick-&-morty&embed=episodes\";\r\n    const data = await fetch(URL);\r\n    const dataJson = await data.json();\r\n    return dispatch({\r\n      type: \"FETCH_DATA\",\r\n      payload: dataJson._embedded.episodes,\r\n    });\r\n  };\r\n\r\n\r\nexport const toggleFavAction = (state:IState,dispatch:any,episode: IEpisode | any): IAction => {\r\n    const episodeInFav = state.favourites.includes(episode);\r\n\r\n    let dispatchObj = {\r\n      type: \"ADD_FAV\",\r\n      payload: episode,\r\n    };\r\n\r\n    if (episodeInFav) {\r\n      const favWithoutEpisode = state.favourites.filter(\r\n        (fav: any) => fav.id !== episode.id\r\n      );\r\n\r\n      //   console.log(favWithoutEpisode,\"again\");\r\n      dispatchObj = {\r\n        type: \"REMOVE_FAV\",\r\n        payload: favWithoutEpisode,\r\n      };\r\n    }\r\n    return dispatch(dispatchObj);\r\n  };","import React from \"react\";\r\nimport { Store } from \"./Store\";\r\nimport { IAction, IEpisode, IEpisodeProps } from \"./interfaces\";\r\nimport { fetchingDataAction, toggleFavAction } from \"./Actions\";\r\n\r\nconst EpisodeList = React.lazy<any>(() => import(\"./EpisodesList\"));\r\n\r\nconst HomePage = () => {\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  React.useEffect(() => {\r\n    state.episodes.length === 0 && fetchingDataAction(dispatch);\r\n  }, []);\r\n  const epis: IEpisode = state.episodes;\r\n\r\n  const props: IEpisodeProps = {\r\n    epis: epis,\r\n    store: { state, dispatch },\r\n    toggleFavAction,\r\n    favourites: state.favourites,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Suspense fallback={<div>loading...</div>}>\r\n        <section\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            minWidth: \"100vh\",\r\n          }}\r\n        >\r\n          <EpisodeList {...props} />\r\n        </section>\r\n      </React.Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react'\r\nimport { Store } from \"./Store\";\r\nimport {toggleFavAction} from './Actions'\r\nimport { IEpisodeProps} from './interfaces'\r\n\r\nconst EpisodeList = React.lazy<any>(() => import(\"./EpisodesList\"));\r\n\r\nconst FavPage = ():JSX.Element => {\r\n    const {state,dispatch} = React.useContext(Store)\r\n\r\n    const props:IEpisodeProps={\r\n        epis:state.favourites,\r\n        store:{state,dispatch},\r\n        toggleFavAction,\r\n        favourites:state.favourites\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Suspense fallback={<div>loading...</div>} >\r\n            <div  style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            minWidth: \"100vh\",\r\n          }}\r\n           >\r\n                <EpisodeList {...props} />\r\n            </div>\r\n        </React.Suspense>\r\n    )\r\n}\r\n\r\nexport default FavPage\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { Router, RouteComponentProps } from \"@reach/router\";\r\nimport { StoreProvider } from \"./Store\";\r\nimport HomePage from \"./HomePage\";\r\nimport FavPage from \"./FavPage\";\r\n\r\nconst RouterPage = (\r\n  props: { pageComponent: JSX.Element } & RouteComponentProps\r\n) => props.pageComponent;\r\n\r\nReactDOM.render(\r\n  <StoreProvider>\r\n    <Router>\r\n      <App path=\"/\" >\r\n          <RouterPage pageComponent={<HomePage/>} path=\"/\"/>\r\n          <RouterPage pageComponent={<FavPage/>} path=\"/faves\"/>\r\n      </App>\r\n    </Router>\r\n  </StoreProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}